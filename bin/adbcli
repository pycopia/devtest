#!/usr/bin/env python3

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
An interactive CLI for Android devices, using adb module.
"""

import sys

from elicit.all import *

from devtest.devices.android import adb


class AdbCommands(ObjectCommands):

    def command(self, arguments):
        """Run a command on device.

        Usage:
            command <cmd>...
        """
        argv = arguments["argv"][1:]
        stdout, stderr, es = self._obj.command(argv)
        self._ui.print(es)
        self._ui.write(stdout)
        if stderr:
            self._ui.writeerror(stderr)

    def waitfor(self, arguments):
        """Wait for device to be in a particular state.

        Usage:
            waitfor (any | bootloader | device | recovery | sideload)
        """
        state = arguments["argv"][1]
        self._obj.wait_for(state)


def adbcli(argv):
    """adbcli <serial>

    """
    serial = argv[1] if len(argv) > 1 else os.environ.get("ANDROID_SERIAL")
    if not serial:
        print(adbcli.__doc__)
        return 2

    client = adb.AndroidDeviceClient(serial)

    # Create some basic CLI parts
    uio = ConsoleIO()
    environment = Environ.from_system()
    theme = ANSITheme()
    # Assemble the compound parts
    theui = UserInterface(uio, environment, theme)
    cmd = AdbCommands(theui, client, prompt="%Yadb%w@{}%N> ".format(serial))
    ctl = CommandController(cmd)
    p = CommandParser(ctl, historyfile="~/.adbcli_hist")
    # run the CLI using the parser
    try:
        p.interact()
    except KeyboardInterrupt:
        theui.printf("\n%gBye!%N\n")
        return 1
    return 0


adbcli(sys.argv)

# vim:ts=4:sw=4:softtabstop=4:smarttab:expandtab
